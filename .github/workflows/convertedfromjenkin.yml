name: dockpipejob

on:
  push:
    branches:
      - main

env:
  registry: '058264087706.dkr.ecr.ap-south-1.amazonaws.com/dockimage'
  AWS_ACCESS_KEY_ID: AKIAQ3EGPNSNEYWAYM5V
  AWS_SECRET_ACCESS_KEY: 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
  AWS_DEFAULT_REGION: ap-south-1

jobs:
  Cloning_Git:
    name: Cloning Git
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          repository: kpnssreeram/dockerfirst

  Building_image:
    name: Building image
    runs-on: ubuntu-latest
    needs: Cloning_Git
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
      - name: Build Docker Image
        run: |
          docker build -t $registry .

  Pushing_to_ECR:
    name: Pushing to ECR
    runs-on: ubuntu-latest
    needs: Building_image
    steps:
      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $registry
      - name: Tag Docker Image
        run: |
          docker tag 058264087706.dkr.ecr.ap-south-1.amazonaws.com/dockimage:latest $registry:latest
      - name: Push to ECR
        run: |
          docker push $registry:latest


  stop_previous_containers:
    name: Stop previous containers
    runs-on: ubuntu-latest
    needs: Pushing_to_ECR
    steps:
      - name: Stop Docker Containers
        run: |
          docker ps -f name=mypythonContainer -q | xargs --no-run-if-empty docker container stop
      - name: Remove Docker Containers
        run: |
          docker container ls -a -f name=mypythonContainer -q | xargs -r docker container rm

  Docker_Run:
    name: Docker Run
    runs-on: ubuntu-latest
    needs: stop_previous_containers
    steps:
      - name: Run Docker Container
        run: |
          docker run -d -p 8096:5000 --rm --name mypythonContainer $registry:latest
